name: Create Tag

on:
  push:
    branches:
      - main

permissions: write-all

jobs:
  create-tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Node.js and dependencies
        uses: actions/setup-node@v4
        with:
          node-version: 14

      - name: Install dependencies
        run: npm install

      - name: Build TypeScript code
        run: npm run build

      - name: Set up Git
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global credential.helper '!f() { echo "username=GH_ACTION_TOKEN"; echo "password=${GH_ACTION_TOKEN}"; }; f'

      - name: Get the latest tag
        id: get_latest_tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $latest_tag"
          echo "::set-output name=latest_tag::$latest_tag"

      - name: Create a new Git tag
        id: create_new_tag
        run: |
          latest_tag=${{ steps.get_latest_tag.outputs.latest_tag }}
          if [ "$latest_tag" == "v0.0.0" ]; then
            # If no tags exist, create the first tag
            new_tag="v1.0.0"
          else
            # If tags exist, increase the version
            new_tag=$(echo "$latest_tag" | awk -F. -v OFS=. '{$NF = $NF + 1;} 1')
          fi

          # Check if the tag already exists
          if git rev-parse "$new_tag" >/dev/null 2>&1; then
            echo "Tag $new_tag already exists. Skipping tag creation."
            echo "::set-output name=new_tag::"
          else
            git tag -a "$new_tag" -m "Bump version to $new_tag [skip ci]"
            git push origin "$new_tag"
            echo "::set-output name=new_tag::$new_tag"
          fi

      - name: Use the new tag
        run: echo "New tag: ${{ steps.create_new_tag.outputs.new_tag }}"
